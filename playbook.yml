---
- name: HelloWorld playbook
  hosts: all
  gather_facts: false
  vars:
    # Default parameters, they MUST be overwrite, in order to work
    verbose: false
    cleaning: false
    database: testMerged_Dbs
    environments: testing
    continent: moon
    workflow: "{{ database }}_{{ environments }}_{{ continent }}"
    base_folder: "/Users/daparici/code/local/toy_ansible"
  tasks:
    - name: Verbose - Set the variable conditionally
      ansible.builtin.set_fact:
        verbose_mode: "{{ '--verbose' if verbose else '' }}"

    - name: Verbose - Set the variable conditionally
      ansible.builtin.set_fact:
        cleaning_mode: "{{ '--cleaning' if cleaning else '' }}"

    - name: Print variables
      ansible.builtin.debug:
        msg: |-
          {% for k in _my_vars %}
          {{ k }}: {{ lookup('vars', k) }}
          {% endfor %}
      vars:
        _special_vars:
          - ansible_dependent_role_names
          - ansible_play_batch
          - ansible_play_hosts
          - ansible_play_hosts_all
          - ansible_play_name
          - ansible_play_role_names
          - ansible_role_names
          - environment
          - hostvars
          - play_hosts
          - role_names
        _hostvars: "{{ hostvars[inventory_hostname].keys() }}"
        _my_vars: "{{ vars.keys() |
                      difference(_hostvars) |
                      difference(_special_vars) |
                      reject('match', '^_.*$') |
                      list |
                      sort }}"
      when: ansible_verbosity > 0

    - name: Check the data loss for DBs
      ansible.builtin.shell:
        cmd: "{{ base_folder }}/hdfs_merged_dbs.py --workflow {{ workflow }} {{ cleaning_mode }} {{ verbose_mode }}"
      args:
        executable: /usr/bin/python3
      register: python_result
      changed_when: python_result.rc != 0

    - name: Get stdout or stderr from the output
      ansible.builtin.debug:
        msg: "{{ python_result.stdout }}"
      when: python_result is defined and python_result != ''
